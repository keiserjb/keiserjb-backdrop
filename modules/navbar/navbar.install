<?php

/**
 * @file
 * Install, update and uninstall functions for the Navbar module.
 */

/**
 * Implements hook_install().
 */
function navbar_install() {
  module_load_include('inc', 'navbar', 'navbar.shortcut');
  $shortcut_set = navbar_default_shortcut_set();
  // If Backdrop is being installed, rebuild the menu before saving the shortcut
  // set, to make sure the links defined above can be correctly saved. (During
  // installation, the menu might not have been built at all yet, or it might
  // have been built but without the node module's links in it.)
  if (backdrop_installation_attempted()) {
    menu_rebuild();
  }
  navbar_shortcut_set_save($shortcut_set);
}

/**
 * Implements hook_uninstall().
 */
function navbar_uninstall() {
  module_load_include('inc', 'navbar', 'navbar.shortcut');
  // Delete the menu links associated with each shortcut set.
  foreach (navbar_shortcut_sets() as $shortcut_set) {
    menu_delete_links($shortcut_set->set_name);
  }
}

/**
 * Implements hook_schema().
 */
function navbar_schema() {
  $schema['navbar_shortcut_set'] = array(
    'description' => 'Stores information about sets of shortcuts links.',
    'fields' => array(
      'set_name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => "Primary Key: The {menu_links}.menu_name under which the set's links are stored.",
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The title of the set.',
      ),
    ),
    'primary key' => array('set_name'),
    'foreign keys' => array(
      'menu_name' => array(
        'table' => 'menu_links',
        'columns' => array('set_name' => 'menu_name'),
      ),
    ),
  );

  $schema['navbar_shortcut_set_users'] = array(
    'description' => 'Maps users to shortcut sets.',
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid for this set.',
      ),
      'set_name' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => "The {shortcut_set}.set_name that will be displayed for this user.",
      ),
    ),
    'primary key' => array('uid'),
    'indexes' => array(
      'set_name' => array('set_name'),
    ),
    'foreign keys' => array(
      'set_user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'set_name' => array(
        'table' => 'navbar_shortcut_set',
        'columns' => array('set_name' => 'set_name'),
      ),
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_N().
 */
function navbar_update_1100() {
  module_load_include('inc', 'navbar', 'navbar.shortcut');
  // Switch on some features.
  $components = array('navbar.user', 'navbar.shortcut', 'navbar.user_count', 'navbar.alert', 'navbar.search');
  config_set('navbar.settings', 'components', $components);
  if (!config_get('navbar.settings', 'navbar_shortcut_max_slots')) {
    config_set('navbar.settings', 'navbar_shortcut_max_slots', 7);
  }
  if (!config_get('navbar.settings', 'navbar_theme')) {
    config_set('navbar.settings', 'navbar_theme', 'light');
  }
  // Create shortcut db tables.
  $schema=navbar_schema();
  if (!db_table_exists('navbar_shortcut_set')) {
    db_create_table('navbar_shortcut_set', $schema['navbar_shortcut_set']);
  }
  if (!db_table_exists('navbar_shortcut_set_users')) {
    db_create_table('navbar_shortcut_set_users', $schema['navbar_shortcut_set_users']);
  }

  $count = db_select('navbar_shortcut_set', 'ss')
    ->fields('ss')
    ->condition('set_name', NAVBAR_SHORTCUT_DEFAULT_SET_NAME)
    ->execute()
    ->rowCount();
  // Create an initial default shortcut set.
  if (!$count) {
    $shortcut_set = navbar_default_shortcut_set();
    // If Backdrop is being installed, rebuild the menu before saving the shortcut
    // set, to make sure the links defined above can be correctly saved. (During
    // installation, the menu might not have been built at all yet, or it might
    // have been built but without the node module's links in it.)
    if (backdrop_installation_attempted()) {
      menu_rebuild();
    }
    $record['set_name'] = NAVBAR_SHORTCUT_DEFAULT_SET_NAME;
    $record['title'] = $shortcut_set->title;
    db_insert('navbar_shortcut_set')->fields($record)->execute();
    foreach ($shortcut_set->links as $link) {
      $link['menu_name'] = NAVBAR_SHORTCUT_DEFAULT_SET_NAME;
      $link['plid'] = 0;
      menu_link_save($link);
    }
  }
}

/**
 * Implements hook_update_N().
 */
function navbar_update_1101() {
  module_load_include('inc', 'navbar', 'navbar.shortcut');
  // Insert shortcut sets into configuration.
  if (!config_get('navbar.settings', 'navbar_shortcut_sets')) {
    navbar_shortcut_set_config_save();
  }
}

/**
 * Implements hook_update_last_removed().
 */
function navbar_update_last_removed() {
  return 7001;
}
